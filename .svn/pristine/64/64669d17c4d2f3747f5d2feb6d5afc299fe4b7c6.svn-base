package com.aavn.rs.domain;

// Generated Mar 11, 2015 10:05:13 AM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.GenericGenerator;

/**
 * Skill generated by hbm2java
 */
@Entity
@Table(name = "skill")
public class Skill implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private int id;
	private String label;
	
	@ManyToMany(mappedBy="skills")
	private Set<Applicant> applicants = new HashSet<Applicant>(0);

	public Skill() {
		
	}

	public Skill(int id) {
		this.id = id;
	}

	public Skill(int id, String label, Set<Applicant> applicants) {
		this.id = id;
		this.label = label;
		this.applicants = applicants;
	}

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "label")
	public String getLabel() {
		return this.label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	public Set<Applicant> getApplicants() {
		return applicants;
	}

	public void setApplicants(Set<Applicant> applicants) {
		this.applicants = applicants;
	}
	
	
	
	public Skill(int id, String label) {
		super();
		this.id = id;
		this.label = label;
	}

	public static Set<Skill> getSkills() {
		Set<Skill> skills = new HashSet<Skill>();
		skills.add(new Skill(1, "Java"));
		skills.add(new Skill(2, ".Net"));
		skills.add(new Skill(3, "PHP"));
		skills.add(new Skill(4, "iOS"));
		skills.add(new Skill(5, "Android"));
		skills.add(new Skill(6, "Testing"));
		return skills;
	}

}
