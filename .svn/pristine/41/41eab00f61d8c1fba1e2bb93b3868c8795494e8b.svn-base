package com.aavn.rs.dao.impl;

import java.util.List;

import org.apache.log4j.Logger;
import org.hibernate.Criteria;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.aavn.rs.dao.ICommonDAO;

@Repository
public class CommonDAO implements ICommonDAO {

	@Autowired
	private SessionFactory sessionFactory;
	
	private static final Object LOGMES = "Log From BayMax!";
	private static final Logger LOGGER = Logger.getLogger(CommonDAO.class);
	
	@Override
	@Transactional
	public boolean save(Object entity) {
		Boolean flag = false;
		try {
			sessionFactory.getCurrentSession().save(entity);
			flag = true;
		} catch (Exception e) {
			LOGGER.error(LOGMES, e);
			
			flag = false;
		}
		return flag;
	}

	@Override
	@Transactional
	public boolean update(Object entity) {
		Boolean flag = false;
		try {
			sessionFactory.getCurrentSession().update(entity);
			flag = true;
		} catch (Exception e) {
			LOGGER.error(LOGMES, e);
			
			flag = false;
		}
		return flag;
	}

	@Override
	@Transactional
	public boolean delete(Object entity) {
		Boolean flag = false;
		try {
			sessionFactory.getCurrentSession().delete(entity);
			flag = true;
		} catch (Exception e) {
			LOGGER.error(LOGMES, e);
			
			flag = false;
		}
		return flag;
	}

	@Override
	@SuppressWarnings("unchecked")
	@Transactional
	public <T> List<T> loadAll(Class<T> entityClass) {
		Criteria criteria = sessionFactory.getCurrentSession().createCriteria(entityClass);
        return (List<T>) criteria.list();
	}
	
	
}
