package com.aavn.rs.domain;

// Generated Mar 11, 2015 10:05:13 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;

/**
 * Applicant generated by hbm2java
 */
@Entity
@Table(name = "applicant")
public class Applicant implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private int id;
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "event")
	private Event event;
	
	@Column(name = "last_name")
	private String lastName;
	
	@Column(name = "first_name")
	private String firstName;
	
	
	private Date birthday;
	
	
	private String email;
	
	
	private String skype;
	
	
	private String phoneNumber;
	private Boolean isFresher;
	private String university;
	private String major;
	private Integer yearOfExperience;
	private String other;
	private Date graduateTime;
	
	@Column(name = "gender")
	private Integer gender;
	
	@ManyToMany(fetch=FetchType.EAGER)
    @JoinTable(name="applicant_skill", 
                joinColumns={@JoinColumn(name="applicant_id")}, 
                inverseJoinColumns={@JoinColumn(name="skill_id")})
	private Set<Skill> skills = new HashSet<Skill>();

	public Applicant() {
	}

	public Applicant(int id) {
		this.id = id;
	}

	public Applicant(int id, Event event, String lastName, String firstName,
			Date birthday, String email, String skype, String phoneNumber,
			Boolean isFresher, String university, String major,
			Integer yearOfExperience, String other, Date graduateTime,
			Integer gender, Set<Skill> skills) {
		this.id = id;
		this.event = event;
		this.lastName = lastName;
		this.firstName = firstName;
		this.birthday = birthday;
		this.email = email;
		this.skype = skype;
		this.phoneNumber = phoneNumber;
		this.isFresher = isFresher;
		this.university = university;
		this.major = major;
		this.yearOfExperience = yearOfExperience;
		this.other = other;
		this.graduateTime = graduateTime;
		this.gender = gender;
		this.skills = skills;
	}

	
	public Event getEvent() {
		return this.event;
	}

	public void setEvent(Event event) {
		this.event = event;
	}

	
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "first_name")
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "birthday", length = 29)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "skype")
	public String getSkype() {
		return this.skype;
	}

	public void setSkype(String skype) {
		this.skype = skype;
	}

	@Column(name = "phone_number")
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "is_fresher")
	public Boolean getIsFresher() {
		return this.isFresher;
	}

	public void setIsFresher(Boolean isFresher) {
		this.isFresher = isFresher;
	}

	@Column(name = "university")
	public String getUniversity() {
		return this.university;
	}

	public void setUniversity(String university) {
		this.university = university;
	}

	@Column(name = "major")
	public String getMajor() {
		return this.major;
	}

	public void setMajor(String major) {
		this.major = major;
	}

	@Column(name = "year_of_experience")
	public Integer getYearOfExperience() {
		return this.yearOfExperience;
	}

	public void setYearOfExperience(Integer yearOfExperience) {
		this.yearOfExperience = yearOfExperience;
	}

	@Column(name = "other")
	public String getOther() {
		return this.other;
	}

	public void setOther(String other) {
		this.other = other;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "graduate_time", length = 29)
	public Date getGraduateTime() {
		return this.graduateTime;
	}

	public void setGraduateTime(Date graduateTime) {
		this.graduateTime = graduateTime;
	}

	
	public Integer getGender() {
		return this.gender;
	}

	public void setGender(Integer gender) {
		this.gender = gender;
	}

	public Set<Skill> getSkills() {
		return skills;
	}

	public void setSkills(Set<Skill> skills) {
		this.skills = skills;
	}

	@Transient
	public String GenderText() {
		return Gender.getLabel(this.gender);
	}

	@Transient
	public String SkillsText() {
		String skillsText = "";
		for (Skill skill : skills) {
			skillsText += skill.getLabel().trim() + " ; ";
		}

		if (other != null && other.trim() != "")
			skillsText += other.trim() + " ; ";

		return skills.size() > 0 || (other != null && other.trim() != "") ? skillsText
				.substring(0, skillsText.length() - 2) : skillsText;

	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}
}
